---
# file: roles/common/tasks/main.yml

- name: be sure ntp is NOT installed
  apt:
    name: ntp
    state: absent
  tags: ntp

- name: be sure chrony is installed
  apt:
    name: chrony
    state: present
  tags: chrony

- name: be sure chrony is configured
  template:
    src: chrony.conf.j2
    dest: /etc/chrony/chrony.conf
  notify:
    - restart chronyd
  tags: chrony

- name: be sure chronyd is running and enabled
  service:
    name: chronyd
    state: started
    enabled: yes
  tags: chrony

- name: be sure the key for docker repo exists
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  tags: docker

- name: be sure docker repo is available
  apt_repository:
    # repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
    state: present
  tags: docker

- name: be sure docker requirements are installed
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python-pip
    state: present
    update_cache: yes
  tags: docker

- name: be sure docker-ce is installed
  apt:
    name: docker-ce
    state: present
  tags: docker

- name: be sure docker group exists
  group:
    name: "{{ docker_group }}"
    state: present
  tags: docker

- name: be sure user "ubuntu" is a part of the "docker" group
  user:
    name: "{{ remote_user }}"
    group: "{{ docker_group }}"
    append: yes
  tags: docker

- name: be sure docker-compose is NOT installed via apt
  apt:
    name: docker-compose
    state: absent
  tags: docker

- name: be sure docker-compose python libraries are installed
  pip:
    name: docker-compose
    state: present
  tags: docker

- name: be sure docker-compose is installed
  get_url: 
    url : https://github.com/docker/compose/releases/download/1.24.1/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}
    dest: /usr/local/bin/docker-compose
    mode: 'u+x,g+x'
  tags: docker

- name: be sure docker is running and enabled
  service:
    name: docker
    state: started
    enabled: yes
  tags: docker
